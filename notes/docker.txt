https://docs.docker.com/engine/install/centos/
-----------------------------------------------------------------------------
-- Docker Hello World on Centos on Vagrant ----------------------------------
-----------------------------------------------------------------------------
sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install docker-ce docker-ce-cli containerd.io
sudo systemctl start docker
sudo systemctl status docker
sudo docker run hello-world
sudo groupadd docker
sudo usermod -aG docker hadoop
$ docker run hello-world  ## after logout and relogin
    Hello from Docker!
    This message shows that your installation appears to be working correctly.
    :::::: More O/P produced .. Pathik Pathik ::
$
*********************************
** Some issues with Networking **
*********************************
-----------------------------------------------------------------------------
$ cat Vagrantfile
Vagrant.configure("2") do |config|
    config.vm.define "hdpmc1" do |hdpmc1| 
        hdpmc1.vm.box = "bento/centos-7.2"
        hdpmc1.vm.network "private_network", ip:"192.168.77.10"
        hdpmc1.vm.hostname = "hdpmc1"
        hdpmc1.vm.provider :virtualbox do |vb|
           vb.name = "hdpmc1"
           vb.memory = 4096
           vb.cpus = 1
        end
    end    
    config.vm.define "hdpmc2" do |hdpmc2| 
        hdpmc2.vm.box = "bento/centos-7.2"
        hdpmc2.vm.network "private_network", ip:"192.168.77.11"
        hdpmc2.vm.hostname = "hdpmc2"
        hdpmc2.vm.provider :virtualbox do |vb|
           vb.name = "hdpmc2"
           vb.memory = 4096
           vb.cpus = 1
        end
    end    
end
$
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
-- Docker on AWS ------------------------------------------------------------
-----------------------------------------------------------------------------
t3.micro	
Amazon Linux 2 AMI (HVM), SSD Volume Type
REF: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/docker-basics.html
sudo yum update -y
sudo amazon-linux-extras install docker
sudo service docker start
sudo service docker status
sudo usermod -a -G docker ec2-user
## Log out and logback in
docker info
## Test ports 
Ref: https://prakhar.me/docker-curriculum/
docker run -d -P --name static-site prakhar1989/static-site
docker port static-site
	443/tcp -> 0.0.0.0:32768
	80/tcp -> 0.0.0.0:32769
$ netstat -nlt  | grep 32
tcp        0      0 127.0.0.1:32789         0.0.0.0:*               LISTEN
tcp6       0      0 :::32769                :::*                    LISTEN
tcp6       0      0 :::32768                :::*                    LISTEN
$
curl http://54.69.9.16:32769/  ## ok worked
**
git clone https://github.com/prakhar1989/docker-curriculum.git
cd docker-curriculum/flask-app
docker build -t ppaul/catnip .
docker run -p 8888:5000 --name static-site ppaul/catnip:latest
	http://54.69.9.16:8888/  ## worked
docker stop static-site ; docker rm  static-site
-----------------------------------------------------------------------------
-- END ----------------------------------------------------------------------
-----------------------------------------------------------------------------
